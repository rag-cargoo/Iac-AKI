---
- name: 1. Docker 및 필요 라이브러리 설치
  hosts: swarm_nodes  # manager + worker 전체
  become: true
  gather_facts: true
  tasks:
    - name: 필요한 패키지 설치 (apt-transport-https, curl 등)
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Docker GPG 키 추가
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Docker Repository 추가
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Docker Engine 설치
      apt:
        name: docker-ce
        state: latest
        update_cache: yes

    - name: ubuntu 사용자를 docker 그룹에 추가
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: python3-pip 설치
      apt:
        name: python3-pip
        state: present

    - name: Docker SDK for Python 설치
      pip:
        name: docker
        state: present

- name: 2. Docker Swarm 매니저 초기화
  hosts: swarm_manager
  become: true
  gather_facts: true
  tasks:
    - name: Swarm 매니저 초기화
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"
      register: swarm_init_result

    - name: 워커 조인 토큰을 변수로 저장
      set_fact:
        worker_join_token: "{{ swarm_init_result.swarm_facts.JoinTokens.Worker }}"
      when: swarm_init_result is defined

- name: 3. Docker Swarm 워커 노드 조인
  hosts: swarm_worker
  become: true
  gather_facts: true
  tasks:
    - name: 워커 노드를 Swarm 클러스터에 조인
      community.docker.docker_swarm:
        state: join
        join_token: "{{ hostvars[groups['swarm_manager'][0]]['worker_join_token'] }}"
        remote_addrs:
          - "{{ hostvars[groups['swarm_manager'][0]]['ansible_host'] }}:2377"
